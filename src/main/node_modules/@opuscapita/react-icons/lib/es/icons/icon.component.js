var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* eslint-disable import/no-duplicates */
import React from 'react';
import PropTypes from 'prop-types';

import IndicatorAlert from './images/indicators/Alert.svg';
import IndicatorArrowLeft from './images/indicators/ArrowLeft.svg';
import IndicatorAttachment from './images/indicators/Attachment.svg';

import IndicatorBurger from './images/indicators/Burger.svg';
import IndicatorBurgerClose from './images/indicators/Burger-close.svg';

import IndicatorCalendar from './images/indicators/Calendar.svg';
import IndicatorCaretLeft from './images/indicators/CaretLeft.svg';
import IndicatorCaretRight from './images/indicators/CaretRight.svg';
import IndicatorClock from './images/indicators/Clock.svg';
import IndicatorClose from './images/indicators/Close.svg';
import IndicatorComment from './images/indicators/Comment.svg';
import IndicatorCommented from './images/indicators/Commented.svg';
import IndicatorCritical from './images/indicators/Critical.svg';

import IndicatorDelete from './images/indicators/Delete.svg';
import IndicatorDraggingArrows from './images/indicators/DraggingArrows.svg';

import IndicatorEdit from './images/indicators/Edit.svg';
import IndicatorEmail from './images/indicators/Email.svg';
import IndicatorError from './images/indicators/Error.svg';
import IndicatorExclamation from './images/indicators/Exclamation.svg';
import IndicatorExport from './images/indicators/Export.svg';

import IndicatorFiltering from './images/indicators/Filtering.svg';
import IndicatorFlagged from './images/indicators/Flagged.svg';
import IndicatorFolder from './images/indicators/Folder.svg';

import IndicatorHelp from './images/indicators/Help.svg';

import IndicatorInspected from './images/indicators/Inspected.svg';
import IndicatorInspectedAndApproved from './images/indicators/InspectedAndApproved.svg';

import IndicatorLogout from './images/indicators/Logout.svg';

import IndicatorMinus from './images/indicators/Minus.svg';
import IndicatorMore from './images/indicators/More.svg';

import IndicatorOk from './images/indicators/Ok.svg';

import IndicatorPinned from './images/indicators/Pinned.svg';
import IndicatorPlus from './images/indicators/Plus.svg';
import IndicatorPresentation from './images/indicators/Presentation.svg';
import IndicatorPrint from './images/indicators/Print.svg';

import IndicatorRejected from './images/indicators/Rejected.svg';
import IndicatorRemove from './images/indicators/Remove.svg';
import RemoveFilter from './images/indicators/RemoveFilter.svg';

import IndicatorSave from './images/indicators/Save.svg';
import IndicatorSearch from './images/indicators/Search.svg';
import IndicatorSearchWithCircle from './images/indicators/SearchWithCircle.svg';
import IndicatorSettings from './images/indicators/Settings.svg';
import IndicatorSortAsc from './images/indicators/SortAsc.svg';
import IndicatorSortDesc from './images/indicators/SortDesc.svg';
import IndicatorInClarification from './images/indicators/StatusInclarification.svg';
import IndicatorLocked from './images/indicators/StatusLocked.svg';
import IndicatorStatusUser from './images/indicators/StatusUser.svg';

import IndicatorWarning from './images/indicators/Warning.svg';
import IndicatorExceedsLimit from './images/indicators/ExceedsLimit.svg';

import ProductInvoices from './images/products/Invoices.svg';
import ProductUser from './images/products/User.svg';
import ProductAccounts from './images/products/Accounts.svg';
import ProductArchive from './images/products/Archive.svg';
import ProductDashboard from './images/products/Dashboard.svg';
import ProductInfo from './images/products/Info.svg';
import ProductLiquidity from './images/products/Liquidity.svg';
import ProductNetting from './images/products/Netting.svg';
import ProductPayments from './images/products/Payments.svg';
import ProductSettings from './images/products/Settings.svg';
import ProductTools from './images/products/Tools.svg';
import ProductUsers from './images/products/Users.svg';
import ProductMatching from './images/products/Matching.svg';
import ProductInspector from './images/products/Inspector.svg';

import InvoicesGeneric from './images/invoices/document/generic.svg';
import InvoicesPdf from './images/invoices/document/pdf.svg';
import InvoicesPng from './images/invoices/document/png.svg';
import InvoicesPpt from './images/invoices/document/ppt.svg';
import InvoicesWord from './images/invoices/document/word.svg';
import InvoicesXls from './images/invoices/document/xls.svg';

import OCLong from './images/logo/oc-logo.svg';
import OCShort from './images/logo/oc-logo-short.svg';

var components = {
  indicator: {
    alert: React.createFactory(IndicatorAlert),
    arrowLeft: React.createFactory(IndicatorArrowLeft),
    attachment: React.createFactory(IndicatorAttachment),

    burger: React.createFactory(IndicatorBurger),
    burgerClose: React.createFactory(IndicatorBurgerClose),

    calendar: React.createFactory(IndicatorCalendar),
    CaretRight: React.createFactory(IndicatorCaretRight),
    CaretLeft: React.createFactory(IndicatorCaretLeft),
    clock: React.createFactory(IndicatorClock),
    close: React.createFactory(IndicatorClose),
    comment: React.createFactory(IndicatorComment),
    commented: React.createFactory(IndicatorCommented),
    critical: React.createFactory(IndicatorCritical),

    delete: React.createFactory(IndicatorDelete),
    draggingArrows: React.createFactory(IndicatorDraggingArrows),

    edit: React.createFactory(IndicatorEdit),
    email: React.createFactory(IndicatorEmail),
    error: React.createFactory(IndicatorError),
    exclamation: React.createFactory(IndicatorExclamation),
    export: React.createFactory(IndicatorExport),

    filtering: React.createFactory(IndicatorFiltering),
    flagged: React.createFactory(IndicatorFlagged),
    folder: React.createFactory(IndicatorFolder),

    help: React.createFactory(IndicatorHelp),

    inspected: React.createFactory(IndicatorInspected),
    inspectedAndApproved: React.createFactory(IndicatorInspectedAndApproved),

    logout: React.createFactory(IndicatorLogout),

    minus: React.createFactory(IndicatorMinus),
    more: React.createFactory(IndicatorMore),

    ok: React.createFactory(IndicatorOk),

    pinned: React.createFactory(IndicatorPinned),
    plus: React.createFactory(IndicatorPlus),
    presentation: React.createFactory(IndicatorPresentation),
    print: React.createFactory(IndicatorPrint),

    rejected: React.createFactory(IndicatorRejected),
    remove: React.createFactory(IndicatorRemove),
    removeFilter: React.createFactory(RemoveFilter),

    save: React.createFactory(IndicatorSave),
    search: React.createFactory(IndicatorSearch),
    searchWithCircle: React.createFactory(IndicatorSearchWithCircle),
    settings: React.createFactory(IndicatorSettings),
    sortAsc: React.createFactory(IndicatorSortAsc),
    sortDesc: React.createFactory(IndicatorSortDesc),
    inClarification: React.createFactory(IndicatorInClarification),
    locked: React.createFactory(IndicatorLocked),

    user: React.createFactory(IndicatorStatusUser),

    warning: React.createFactory(IndicatorWarning),

    exceedsLimit: React.createFactory(IndicatorExceedsLimit)

  },
  product: {
    Invoices: React.createFactory(ProductInvoices),
    user: React.createFactory(ProductUser),
    Accounts: React.createFactory(ProductAccounts),
    Archive: React.createFactory(ProductArchive),
    Dashboard: React.createFactory(ProductDashboard),
    Info: React.createFactory(ProductInfo),
    Liquidity: React.createFactory(ProductLiquidity),
    Netting: React.createFactory(ProductNetting),
    Payments: React.createFactory(ProductPayments),
    Settings: React.createFactory(ProductSettings),
    Tools: React.createFactory(ProductTools),
    Users: React.createFactory(ProductUsers),
    Examples: React.createFactory(ProductInfo),
    Matching: React.createFactory(ProductMatching),
    Inspector: React.createFactory(ProductInspector)
  },
  invoices: {
    generic: React.createFactory(InvoicesGeneric),
    pdf: React.createFactory(InvoicesPdf),
    png: React.createFactory(InvoicesPng),
    ppt: React.createFactory(InvoicesPpt),
    word: React.createFactory(InvoicesWord),
    xls: React.createFactory(InvoicesXls)
  },
  logo: {
    OCShort: React.createFactory(OCShort),
    OCLong: React.createFactory(OCLong)
  }
};

var Icon = function (_React$Component) {
  _inherits(Icon, _React$Component);

  function Icon(props) {
    _classCallCheck(this, Icon);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    switch (props.type) {
      case 'product':
        {
          _this.defaultWidth = 40;
          _this.defaultHeight = 40;
          break;
        }
      case 'indicator':
        {
          _this.defaultWidth = 25;
          _this.defaultHeight = 25;
          break;
        }
      case 'logo':
        {
          if (props.name === 'OCLong') {
            _this.defaultWidth = 150;
            _this.defaultHeight = 30;
          } else {
            _this.defaultWidth = 50;
            _this.defaultHeight = 30;
          }
          break;
        }
      default:
        _this.defaultWidth = 40;
        _this.defaultHeight = 40;
    }
    return _this;
  }

  Icon.prototype.render = function render() {
    var _props = this.props,
        type = _props.type,
        name = _props.name,
        width = _props.width,
        height = _props.height,
        otherProps = _objectWithoutProperties(_props, ['type', 'name', 'width', 'height']);

    var component = components[type] && components[type][name];
    var properties = _extends({
      width: width || this.defaultWidth,
      height: height || this.defaultHeight,
      focusable: 'false'
    }, otherProps);
    if (typeof IndicatorLogout === 'function') {
      return component(properties);
    }
    return React.createElement('span', _extends({ className: 'icon' }, this.props));
  };

  return Icon;
}(React.Component);

export { Icon as default };


Icon.defaultProps = {
  width: null,
  height: null
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9pY29ucy9pY29uLmNvbXBvbmVudC5qc3giXSwibmFtZXMiOlsiUmVhY3QiLCJQcm9wVHlwZXMiLCJJbmRpY2F0b3JBbGVydCIsIkluZGljYXRvckFycm93TGVmdCIsIkluZGljYXRvckF0dGFjaG1lbnQiLCJJbmRpY2F0b3JCdXJnZXIiLCJJbmRpY2F0b3JCdXJnZXJDbG9zZSIsIkluZGljYXRvckNhbGVuZGFyIiwiSW5kaWNhdG9yQ2FyZXRMZWZ0IiwiSW5kaWNhdG9yQ2FyZXRSaWdodCIsIkluZGljYXRvckNsb2NrIiwiSW5kaWNhdG9yQ2xvc2UiLCJJbmRpY2F0b3JDb21tZW50IiwiSW5kaWNhdG9yQ29tbWVudGVkIiwiSW5kaWNhdG9yQ3JpdGljYWwiLCJJbmRpY2F0b3JEZWxldGUiLCJJbmRpY2F0b3JEcmFnZ2luZ0Fycm93cyIsIkluZGljYXRvckVkaXQiLCJJbmRpY2F0b3JFbWFpbCIsIkluZGljYXRvckVycm9yIiwiSW5kaWNhdG9yRXhjbGFtYXRpb24iLCJJbmRpY2F0b3JFeHBvcnQiLCJJbmRpY2F0b3JGaWx0ZXJpbmciLCJJbmRpY2F0b3JGbGFnZ2VkIiwiSW5kaWNhdG9yRm9sZGVyIiwiSW5kaWNhdG9ySGVscCIsIkluZGljYXRvckluc3BlY3RlZCIsIkluZGljYXRvckluc3BlY3RlZEFuZEFwcHJvdmVkIiwiSW5kaWNhdG9yTG9nb3V0IiwiSW5kaWNhdG9yTWludXMiLCJJbmRpY2F0b3JNb3JlIiwiSW5kaWNhdG9yT2siLCJJbmRpY2F0b3JQaW5uZWQiLCJJbmRpY2F0b3JQbHVzIiwiSW5kaWNhdG9yUHJlc2VudGF0aW9uIiwiSW5kaWNhdG9yUHJpbnQiLCJJbmRpY2F0b3JSZWplY3RlZCIsIkluZGljYXRvclJlbW92ZSIsIlJlbW92ZUZpbHRlciIsIkluZGljYXRvclNhdmUiLCJJbmRpY2F0b3JTZWFyY2giLCJJbmRpY2F0b3JTZWFyY2hXaXRoQ2lyY2xlIiwiSW5kaWNhdG9yU2V0dGluZ3MiLCJJbmRpY2F0b3JTb3J0QXNjIiwiSW5kaWNhdG9yU29ydERlc2MiLCJJbmRpY2F0b3JJbkNsYXJpZmljYXRpb24iLCJJbmRpY2F0b3JMb2NrZWQiLCJJbmRpY2F0b3JTdGF0dXNVc2VyIiwiSW5kaWNhdG9yV2FybmluZyIsIkluZGljYXRvckV4Y2VlZHNMaW1pdCIsIlByb2R1Y3RJbnZvaWNlcyIsIlByb2R1Y3RVc2VyIiwiUHJvZHVjdEFjY291bnRzIiwiUHJvZHVjdEFyY2hpdmUiLCJQcm9kdWN0RGFzaGJvYXJkIiwiUHJvZHVjdEluZm8iLCJQcm9kdWN0TGlxdWlkaXR5IiwiUHJvZHVjdE5ldHRpbmciLCJQcm9kdWN0UGF5bWVudHMiLCJQcm9kdWN0U2V0dGluZ3MiLCJQcm9kdWN0VG9vbHMiLCJQcm9kdWN0VXNlcnMiLCJQcm9kdWN0TWF0Y2hpbmciLCJQcm9kdWN0SW5zcGVjdG9yIiwiSW52b2ljZXNHZW5lcmljIiwiSW52b2ljZXNQZGYiLCJJbnZvaWNlc1BuZyIsIkludm9pY2VzUHB0IiwiSW52b2ljZXNXb3JkIiwiSW52b2ljZXNYbHMiLCJPQ0xvbmciLCJPQ1Nob3J0IiwiY29tcG9uZW50cyIsImluZGljYXRvciIsImFsZXJ0IiwiY3JlYXRlRmFjdG9yeSIsImFycm93TGVmdCIsImF0dGFjaG1lbnQiLCJidXJnZXIiLCJidXJnZXJDbG9zZSIsImNhbGVuZGFyIiwiQ2FyZXRSaWdodCIsIkNhcmV0TGVmdCIsImNsb2NrIiwiY2xvc2UiLCJjb21tZW50IiwiY29tbWVudGVkIiwiY3JpdGljYWwiLCJkZWxldGUiLCJkcmFnZ2luZ0Fycm93cyIsImVkaXQiLCJlbWFpbCIsImVycm9yIiwiZXhjbGFtYXRpb24iLCJleHBvcnQiLCJmaWx0ZXJpbmciLCJmbGFnZ2VkIiwiZm9sZGVyIiwiaGVscCIsImluc3BlY3RlZCIsImluc3BlY3RlZEFuZEFwcHJvdmVkIiwibG9nb3V0IiwibWludXMiLCJtb3JlIiwib2siLCJwaW5uZWQiLCJwbHVzIiwicHJlc2VudGF0aW9uIiwicHJpbnQiLCJyZWplY3RlZCIsInJlbW92ZSIsInJlbW92ZUZpbHRlciIsInNhdmUiLCJzZWFyY2giLCJzZWFyY2hXaXRoQ2lyY2xlIiwic2V0dGluZ3MiLCJzb3J0QXNjIiwic29ydERlc2MiLCJpbkNsYXJpZmljYXRpb24iLCJsb2NrZWQiLCJ1c2VyIiwid2FybmluZyIsImV4Y2VlZHNMaW1pdCIsInByb2R1Y3QiLCJJbnZvaWNlcyIsIkFjY291bnRzIiwiQXJjaGl2ZSIsIkRhc2hib2FyZCIsIkluZm8iLCJMaXF1aWRpdHkiLCJOZXR0aW5nIiwiUGF5bWVudHMiLCJTZXR0aW5ncyIsIlRvb2xzIiwiVXNlcnMiLCJFeGFtcGxlcyIsIk1hdGNoaW5nIiwiSW5zcGVjdG9yIiwiaW52b2ljZXMiLCJnZW5lcmljIiwicGRmIiwicG5nIiwicHB0Iiwid29yZCIsInhscyIsImxvZ28iLCJJY29uIiwicHJvcHMiLCJ0eXBlIiwiZGVmYXVsdFdpZHRoIiwiZGVmYXVsdEhlaWdodCIsIm5hbWUiLCJyZW5kZXIiLCJ3aWR0aCIsImhlaWdodCIsIm90aGVyUHJvcHMiLCJjb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwiZm9jdXNhYmxlIiwiQ29tcG9uZW50IiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQSxPQUFPQSxLQUFQLE1BQWtCLE9BQWxCO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0Qjs7QUFFQSxPQUFPQyxjQUFQLE1BQ0UsK0JBREY7QUFFQSxPQUFPQyxrQkFBUCxNQUNFLG1DQURGO0FBRUEsT0FBT0MsbUJBQVAsTUFDRSxvQ0FERjs7QUFHQSxPQUFPQyxlQUFQLE1BQ0UsZ0NBREY7QUFFQSxPQUFPQyxvQkFBUCxNQUNFLHNDQURGOztBQUdBLE9BQU9DLGlCQUFQLE1BQ0Usa0NBREY7QUFFQSxPQUFPQyxrQkFBUCxNQUNFLG1DQURGO0FBRUEsT0FBT0MsbUJBQVAsTUFDRSxvQ0FERjtBQUVBLE9BQU9DLGNBQVAsTUFDRSwrQkFERjtBQUVBLE9BQU9DLGNBQVAsTUFDRSwrQkFERjtBQUVBLE9BQU9DLGdCQUFQLE1B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LEdBQW9CLEdBQXBCO0FBQ0Esa0JBQUtDLGFBQUwsR0FBcUIsRUFBckI7QUFDRCxXQUhELE1BR087QUFDTCxrQkFBS0QsWUFBTCxHQUFvQixFQUFwQjtBQUNBLGtCQUFLQyxhQUFMLEdBQXFCLEVBQXJCO0FBQ0Q7QUFDRDtBQUNEO0FBQ0Q7QUFDRSxjQUFLRCxZQUFMLEdBQW9CLEVBQXBCO0FBQ0EsY0FBS0MsYUFBTCxHQUFxQixFQUFyQjtBQXZCSjtBQUZpQjtBQTJCbEI7O2lCQUVERSxNLHFCQUFTO0FBQUEsaUJBT0gsS0FBS0wsS0FQRjtBQUFBLFFBRUxDLElBRkssVUFFTEEsSUFGSztBQUFBLFFBR0xHLElBSEssVUFHTEEsSUFISztBQUFBLFFBSUxFLEtBSkssVUFJTEEsS0FKSztBQUFBLFFBS0xDLE1BTEssVUFLTEEsTUFMSztBQUFBLFFBTUZDLFVBTkU7O0FBUVAsUUFBTUMsWUFBWXBGLFdBQVc0RSxJQUFYLEtBQW9CNUUsV0FBVzRFLElBQVgsRUFBaUJHLElBQWpCLENBQXRDO0FBQ0EsUUFBTU07QUFDSkosYUFBT0EsU0FBUyxLQUFLSixZQURqQjtBQUVKSyxjQUFRQSxVQUFVLEtBQUtKLGFBRm5CO0FBR0pRLGlCQUFXO0FBSFAsT0FJREgsVUFKQyxDQUFOO0FBTUEsUUFBSSxPQUFPL0gsZUFBUCxLQUEyQixVQUEvQixFQUEyQztBQUN6QyxhQUFPZ0ksVUFBVUMsVUFBVixDQUFQO0FBQ0Q7QUFDRCxXQUFPLHVDQUFNLFdBQVUsTUFBaEIsSUFBMkIsS0FBS1YsS0FBaEMsRUFBUDtBQUNELEc7OztFQWpEK0JuSixNQUFNK0osUzs7U0FBbkJiLEk7OztBQW9EckJBLEtBQUtjLFlBQUwsR0FBb0I7QUFDbEJQLFNBQU8sSUFEVztBQUVsQkMsVUFBUTtBQUZVLENBQXBCIiwiZmlsZSI6Imljb24uY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L25vLWR1cGxpY2F0ZXMgKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQgSW5kaWNhdG9yQWxlcnQgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9BbGVydC5zdmcnO1xuaW1wb3J0IEluZGljYXRvckFycm93TGVmdCBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL0Fycm93TGVmdC5zdmcnO1xuaW1wb3J0IEluZGljYXRvckF0dGFjaG1lbnQgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9BdHRhY2htZW50LnN2Zyc7XG5cbmltcG9ydCBJbmRpY2F0b3JCdXJnZXIgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9CdXJnZXIuc3ZnJztcbmltcG9ydCBJbmRpY2F0b3JCdXJnZXJDbG9zZSBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL0J1cmdlci1jbG9zZS5zdmcnO1xuXG5pbXBvcnQgSW5kaWNhdG9yQ2FsZW5kYXIgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9DYWxlbmRhci5zdmcnO1xuaW1wb3J0IEluZGljYXRvckNhcmV0TGVmdCBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL0NhcmV0TGVmdC5zdmcnO1xuaW1wb3J0IEluZGljYXRvckNhcmV0UmlnaHQgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9DYXJldFJpZ2h0LnN2Zyc7XG5pbXBvcnQgSW5kaWNhdG9yQ2xvY2sgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9DbG9jay5zdmcnO1xuaW1wb3J0IEluZGljYXRvckNsb3NlIGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvQ2xvc2Uuc3ZnJztcbmltcG9ydCBJbmRpY2F0b3JDb21tZW50IGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvQ29tbWVudC5zdmcnO1xuaW1wb3J0IEluZGljYXRvckNvbW1lbnRlZCBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL0NvbW1lbnRlZC5zdmcnO1xuaW1wb3J0IEluZGljYXRvckNyaXRpY2FsIGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvQ3JpdGljYWwuc3ZnJztcblxuaW1wb3J0IEluZGljYXRvckRlbGV0ZSBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL0RlbGV0ZS5zdmcnO1xuaW1wb3J0IEluZGljYXRvckRyYWdnaW5nQXJyb3dzIGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvRHJhZ2dpbmdBcnJvd3Muc3ZnJztcblxuaW1wb3J0IEluZGljYXRvckVkaXQgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9FZGl0LnN2Zyc7XG5pbXBvcnQgSW5kaWNhdG9yRW1haWwgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9FbWFpbC5zdmcnO1xuaW1wb3J0IEluZGljYXRvckVycm9yIGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvRXJyb3Iuc3ZnJztcbmltcG9ydCBJbmRpY2F0b3JFeGNsYW1hdGlvbiBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL0V4Y2xhbWF0aW9uLnN2Zyc7XG5pbXBvcnQgSW5kaWNhdG9yRXhwb3J0IGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvRXhwb3J0LnN2Zyc7XG5cbmltcG9ydCBJbmRpY2F0b3JGaWx0ZXJpbmcgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9GaWx0ZXJpbmcuc3ZnJztcbmltcG9ydCBJbmRpY2F0b3JGbGFnZ2VkIGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvRmxhZ2dlZC5zdmcnO1xuaW1wb3J0IEluZGljYXRvckZvbGRlciBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL0ZvbGRlci5zdmcnO1xuXG5pbXBvcnQgSW5kaWNhdG9ySGVscCBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL0hlbHAuc3ZnJztcblxuaW1wb3J0IEluZGljYXRvckluc3BlY3RlZCBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL0luc3BlY3RlZC5zdmcnO1xuaW1wb3J0IEluZGljYXRvckluc3BlY3RlZEFuZEFwcHJvdmVkIGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvSW5zcGVjdGVkQW5kQXBwcm92ZWQuc3ZnJztcblxuaW1wb3J0IEluZGljYXRvckxvZ291dCBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL0xvZ291dC5zdmcnO1xuXG5pbXBvcnQgSW5kaWNhdG9yTWludXMgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9NaW51cy5zdmcnO1xuaW1wb3J0IEluZGljYXRvck1vcmUgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9Nb3JlLnN2Zyc7XG5cbmltcG9ydCBJbmRpY2F0b3JPayBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL09rLnN2Zyc7XG5cbmltcG9ydCBJbmRpY2F0b3JQaW5uZWQgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9QaW5uZWQuc3ZnJztcbmltcG9ydCBJbmRpY2F0b3JQbHVzIGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvUGx1cy5zdmcnO1xuaW1wb3J0IEluZGljYXRvclByZXNlbnRhdGlvbiBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL1ByZXNlbnRhdGlvbi5zdmcnO1xuaW1wb3J0IEluZGljYXRvclByaW50IGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvUHJpbnQuc3ZnJztcblxuaW1wb3J0IEluZGljYXRvclJlamVjdGVkIGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvUmVqZWN0ZWQuc3ZnJztcbmltcG9ydCBJbmRpY2F0b3JSZW1vdmUgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9SZW1vdmUuc3ZnJztcbmltcG9ydCBSZW1vdmVGaWx0ZXIgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9SZW1vdmVGaWx0ZXIuc3ZnJztcblxuaW1wb3J0IEluZGljYXRvclNhdmUgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9TYXZlLnN2Zyc7XG5pbXBvcnQgSW5kaWNhdG9yU2VhcmNoIGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvU2VhcmNoLnN2Zyc7XG5pbXBvcnQgSW5kaWNhdG9yU2VhcmNoV2l0aENpcmNsZSBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL1NlYXJjaFdpdGhDaXJjbGUuc3ZnJztcbmltcG9ydCBJbmRpY2F0b3JTZXR0aW5ncyBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL1NldHRpbmdzLnN2Zyc7XG5pbXBvcnQgSW5kaWNhdG9yU29ydEFzYyBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL1NvcnRBc2Muc3ZnJztcbmltcG9ydCBJbmRpY2F0b3JTb3J0RGVzYyBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL1NvcnREZXNjLnN2Zyc7XG5pbXBvcnQgSW5kaWNhdG9ySW5DbGFyaWZpY2F0aW9uIGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvU3RhdHVzSW5jbGFyaWZpY2F0aW9uLnN2Zyc7XG5pbXBvcnQgSW5kaWNhdG9yTG9ja2VkIGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvU3RhdHVzTG9ja2VkLnN2Zyc7XG5pbXBvcnQgSW5kaWNhdG9yU3RhdHVzVXNlciBmcm9tXG4gICcuL2ltYWdlcy9pbmRpY2F0b3JzL1N0YXR1c1VzZXIuc3ZnJztcblxuaW1wb3J0IEluZGljYXRvcldhcm5pbmcgZnJvbVxuICAnLi9pbWFnZXMvaW5kaWNhdG9ycy9XYXJuaW5nLnN2Zyc7XG5pbXBvcnQgSW5kaWNhdG9yRXhjZWVkc0xpbWl0IGZyb21cbiAgJy4vaW1hZ2VzL2luZGljYXRvcnMvRXhjZWVkc0xpbWl0LnN2Zyc7XG5cbmltcG9ydCBQcm9kdWN0SW52b2ljZXMgZnJvbVxuICAnLi9pbWFnZXMvcHJvZHVjdHMvSW52b2ljZXMuc3ZnJztcbmltcG9ydCBQcm9kdWN0VXNlciBmcm9tXG4gICcuL2ltYWdlcy9wcm9kdWN0cy9Vc2VyLnN2Zyc7XG5pbXBvcnQgUHJvZHVjdEFjY291bnRzIGZyb21cbiAgJy4vaW1hZ2VzL3Byb2R1Y3RzL0FjY291bnRzLnN2Zyc7XG5pbXBvcnQgUHJvZHVjdEFyY2hpdmUgZnJvbVxuICAnLi9pbWFnZXMvcHJvZHVjdHMvQXJjaGl2ZS5zdmcnO1xuaW1wb3J0IFByb2R1Y3REYXNoYm9hcmQgZnJvbVxuICAnLi9pbWFnZXMvcHJvZHVjdHMvRGFzaGJvYXJkLnN2Zyc7XG5pbXBvcnQgUHJvZHVjdEluZm8gZnJvbVxuICAnLi9pbWFnZXMvcHJvZHVjdHMvSW5mby5zdmcnO1xuaW1wb3J0IFByb2R1Y3RMaXF1aWRpdHkgZnJvbVxuICAnLi9pbWFnZXMvcHJvZHVjdHMvTGlxdWlkaXR5LnN2Zyc7XG5pbXBvcnQgUHJvZHVjdE5ldHRpbmcgZnJvbVxuICAnLi9pbWFnZXMvcHJvZHVjdHMvTmV0dGluZy5zdmcnO1xuaW1wb3J0IFByb2R1Y3RQYXltZW50cyBmcm9tXG4gICcuL2ltYWdlcy9wcm9kdWN0cy9QYXltZW50cy5zdmcnO1xuaW1wb3J0IFByb2R1Y3RTZXR0aW5ncyBmcm9tXG4gICcuL2ltYWdlcy9wcm9kdWN0cy9TZXR0aW5ncy5zdmcnO1xuaW1wb3J0IFByb2R1Y3RUb29scyBmcm9tXG4gICcuL2ltYWdlcy9wcm9kdWN0cy9Ub29scy5zdmcnO1xuaW1wb3J0IFByb2R1Y3RVc2VycyBmcm9tXG4gICcuL2ltYWdlcy9wcm9kdWN0cy9Vc2Vycy5zdmcnO1xuaW1wb3J0IFByb2R1Y3RNYXRjaGluZyBmcm9tXG4gICcuL2ltYWdlcy9wcm9kdWN0cy9NYXRjaGluZy5zdmcnO1xuaW1wb3J0IFByb2R1Y3RJbnNwZWN0b3IgZnJvbVxuICAnLi9pbWFnZXMvcHJvZHVjdHMvSW5zcGVjdG9yLnN2Zyc7XG5cbmltcG9ydCBJbnZvaWNlc0dlbmVyaWMgZnJvbVxuICAnLi9pbWFnZXMvaW52b2ljZXMvZG9jdW1lbnQvZ2VuZXJpYy5zdmcnO1xuaW1wb3J0IEludm9pY2VzUGRmIGZyb21cbiAgJy4vaW1hZ2VzL2ludm9pY2VzL2RvY3VtZW50L3BkZi5zdmcnO1xuaW1wb3J0IEludm9pY2VzUG5nIGZyb21cbiAgJy4vaW1hZ2VzL2ludm9pY2VzL2RvY3VtZW50L3BuZy5zdmcnO1xuaW1wb3J0IEludm9pY2VzUHB0IGZyb21cbiAgJy4vaW1hZ2VzL2ludm9pY2VzL2RvY3VtZW50L3BwdC5zdmcnO1xuaW1wb3J0IEludm9pY2VzV29yZCBmcm9tXG4gICcuL2ltYWdlcy9pbnZvaWNlcy9kb2N1bWVudC93b3JkLnN2Zyc7XG5pbXBvcnQgSW52b2ljZXNYbHMgZnJvbVxuICAnLi9pbWFnZXMvaW52b2ljZXMvZG9jdW1lbnQveGxzLnN2Zyc7XG5cbmltcG9ydCBPQ0xvbmcgZnJvbVxuICAnLi9pbWFnZXMvbG9nby9vYy1sb2dvLnN2Zyc7XG5pbXBvcnQgT0NTaG9ydCBmcm9tXG4gICcuL2ltYWdlcy9sb2dvL29jLWxvZ28tc2hvcnQuc3ZnJztcblxuY29uc3QgY29tcG9uZW50cyA9IHtcbiAgaW5kaWNhdG9yOiB7XG4gICAgYWxlcnQ6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yQWxlcnQpLFxuICAgIGFycm93TGVmdDogUmVhY3QuY3JlYXRlRmFjdG9yeShJbmRpY2F0b3JBcnJvd0xlZnQpLFxuICAgIGF0dGFjaG1lbnQ6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yQXR0YWNobWVudCksXG5cbiAgICBidXJnZXI6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yQnVyZ2VyKSxcbiAgICBidXJnZXJDbG9zZTogUmVhY3QuY3JlYXRlRmFjdG9yeShJbmRpY2F0b3JCdXJnZXJDbG9zZSksXG5cbiAgICBjYWxlbmRhcjogUmVhY3QuY3JlYXRlRmFjdG9yeShJbmRpY2F0b3JDYWxlbmRhciksXG4gICAgQ2FyZXRSaWdodDogUmVhY3QuY3JlYXRlRmFjdG9yeShJbmRpY2F0b3JDYXJldFJpZ2h0KSxcbiAgICBDYXJldExlZnQ6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yQ2FyZXRMZWZ0KSxcbiAgICBjbG9jazogUmVhY3QuY3JlYXRlRmFjdG9yeShJbmRpY2F0b3JDbG9jayksXG4gICAgY2xvc2U6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yQ2xvc2UpLFxuICAgIGNvbW1lbnQ6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yQ29tbWVudCksXG4gICAgY29tbWVudGVkOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvckNvbW1lbnRlZCksXG4gICAgY3JpdGljYWw6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yQ3JpdGljYWwpLFxuXG4gICAgZGVsZXRlOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvckRlbGV0ZSksXG4gICAgZHJhZ2dpbmdBcnJvd3M6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yRHJhZ2dpbmdBcnJvd3MpLFxuXG4gICAgZWRpdDogUmVhY3QuY3JlYXRlRmFjdG9yeShJbmRpY2F0b3JFZGl0KSxcbiAgICBlbWFpbDogUmVhY3QuY3JlYXRlRmFjdG9yeShJbmRpY2F0b3JFbWFpbCksXG4gICAgZXJyb3I6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yRXJyb3IpLFxuICAgIGV4Y2xhbWF0aW9uOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvckV4Y2xhbWF0aW9uKSxcbiAgICBleHBvcnQ6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yRXhwb3J0KSxcblxuICAgIGZpbHRlcmluZzogUmVhY3QuY3JlYXRlRmFjdG9yeShJbmRpY2F0b3JGaWx0ZXJpbmcpLFxuICAgIGZsYWdnZWQ6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yRmxhZ2dlZCksXG4gICAgZm9sZGVyOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvckZvbGRlciksXG5cbiAgICBoZWxwOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvckhlbHApLFxuXG4gICAgaW5zcGVjdGVkOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvckluc3BlY3RlZCksXG4gICAgaW5zcGVjdGVkQW5kQXBwcm92ZWQ6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9ySW5zcGVjdGVkQW5kQXBwcm92ZWQpLFxuXG4gICAgbG9nb3V0OiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvckxvZ291dCksXG5cbiAgICBtaW51czogUmVhY3QuY3JlYXRlRmFjdG9yeShJbmRpY2F0b3JNaW51cyksXG4gICAgbW9yZTogUmVhY3QuY3JlYXRlRmFjdG9yeShJbmRpY2F0b3JNb3JlKSxcblxuICAgIG9rOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvck9rKSxcblxuICAgIHBpbm5lZDogUmVhY3QuY3JlYXRlRmFjdG9yeShJbmRpY2F0b3JQaW5uZWQpLFxuICAgIHBsdXM6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yUGx1cyksXG4gICAgcHJlc2VudGF0aW9uOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvclByZXNlbnRhdGlvbiksXG4gICAgcHJpbnQ6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yUHJpbnQpLFxuXG4gICAgcmVqZWN0ZWQ6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yUmVqZWN0ZWQpLFxuICAgIHJlbW92ZTogUmVhY3QuY3JlYXRlRmFjdG9yeShJbmRpY2F0b3JSZW1vdmUpLFxuICAgIHJlbW92ZUZpbHRlcjogUmVhY3QuY3JlYXRlRmFjdG9yeShSZW1vdmVGaWx0ZXIpLFxuXG4gICAgc2F2ZTogUmVhY3QuY3JlYXRlRmFjdG9yeShJbmRpY2F0b3JTYXZlKSxcbiAgICBzZWFyY2g6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yU2VhcmNoKSxcbiAgICBzZWFyY2hXaXRoQ2lyY2xlOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvclNlYXJjaFdpdGhDaXJjbGUpLFxuICAgIHNldHRpbmdzOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvclNldHRpbmdzKSxcbiAgICBzb3J0QXNjOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvclNvcnRBc2MpLFxuICAgIHNvcnREZXNjOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvclNvcnREZXNjKSxcbiAgICBpbkNsYXJpZmljYXRpb246IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9ySW5DbGFyaWZpY2F0aW9uKSxcbiAgICBsb2NrZWQ6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yTG9ja2VkKSxcblxuICAgIHVzZXI6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW5kaWNhdG9yU3RhdHVzVXNlciksXG5cbiAgICB3YXJuaW5nOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvcldhcm5pbmcpLFxuXG4gICAgZXhjZWVkc0xpbWl0OiBSZWFjdC5jcmVhdGVGYWN0b3J5KEluZGljYXRvckV4Y2VlZHNMaW1pdCksXG5cbiAgfSxcbiAgcHJvZHVjdDoge1xuICAgIEludm9pY2VzOiBSZWFjdC5jcmVhdGVGYWN0b3J5KFByb2R1Y3RJbnZvaWNlcyksXG4gICAgdXNlcjogUmVhY3QuY3JlYXRlRmFjdG9yeShQcm9kdWN0VXNlciksXG4gICAgQWNjb3VudHM6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoUHJvZHVjdEFjY291bnRzKSxcbiAgICBBcmNoaXZlOiBSZWFjdC5jcmVhdGVGYWN0b3J5KFByb2R1Y3RBcmNoaXZlKSxcbiAgICBEYXNoYm9hcmQ6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoUHJvZHVjdERhc2hib2FyZCksXG4gICAgSW5mbzogUmVhY3QuY3JlYXRlRmFjdG9yeShQcm9kdWN0SW5mbyksXG4gICAgTGlxdWlkaXR5OiBSZWFjdC5jcmVhdGVGYWN0b3J5KFByb2R1Y3RMaXF1aWRpdHkpLFxuICAgIE5ldHRpbmc6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoUHJvZHVjdE5ldHRpbmcpLFxuICAgIFBheW1lbnRzOiBSZWFjdC5jcmVhdGVGYWN0b3J5KFByb2R1Y3RQYXltZW50cyksXG4gICAgU2V0dGluZ3M6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoUHJvZHVjdFNldHRpbmdzKSxcbiAgICBUb29sczogUmVhY3QuY3JlYXRlRmFjdG9yeShQcm9kdWN0VG9vbHMpLFxuICAgIFVzZXJzOiBSZWFjdC5jcmVhdGVGYWN0b3J5KFByb2R1Y3RVc2VycyksXG4gICAgRXhhbXBsZXM6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoUHJvZHVjdEluZm8pLFxuICAgIE1hdGNoaW5nOiBSZWFjdC5jcmVhdGVGYWN0b3J5KFByb2R1Y3RNYXRjaGluZyksXG4gICAgSW5zcGVjdG9yOiBSZWFjdC5jcmVhdGVGYWN0b3J5KFByb2R1Y3RJbnNwZWN0b3IpLFxuICB9LFxuICBpbnZvaWNlczoge1xuICAgIGdlbmVyaWM6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW52b2ljZXNHZW5lcmljKSxcbiAgICBwZGY6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoSW52b2ljZXNQZGYpLFxuICAgIHBuZzogUmVhY3QuY3JlYXRlRmFjdG9yeShJbnZvaWNlc1BuZyksXG4gICAgcHB0OiBSZWFjdC5jcmVhdGVGYWN0b3J5KEludm9pY2VzUHB0KSxcbiAgICB3b3JkOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEludm9pY2VzV29yZCksXG4gICAgeGxzOiBSZWFjdC5jcmVhdGVGYWN0b3J5KEludm9pY2VzWGxzKSxcbiAgfSxcbiAgbG9nbzoge1xuICAgIE9DU2hvcnQ6IFJlYWN0LmNyZWF0ZUZhY3RvcnkoT0NTaG9ydCksXG4gICAgT0NMb25nOiBSZWFjdC5jcmVhdGVGYWN0b3J5KE9DTG9uZyksXG4gIH0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJY29uIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgc3dpdGNoIChwcm9wcy50eXBlKSB7XG4gICAgICBjYXNlICdwcm9kdWN0Jzoge1xuICAgICAgICB0aGlzLmRlZmF1bHRXaWR0aCA9IDQwO1xuICAgICAgICB0aGlzLmRlZmF1bHRIZWlnaHQgPSA0MDtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdpbmRpY2F0b3InOiB7XG4gICAgICAgIHRoaXMuZGVmYXVsdFdpZHRoID0gMjU7XG4gICAgICAgIHRoaXMuZGVmYXVsdEhlaWdodCA9IDI1O1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgJ2xvZ28nOiB7XG4gICAgICAgIGlmIChwcm9wcy5uYW1lID09PSAnT0NMb25nJykge1xuICAgICAgICAgIHRoaXMuZGVmYXVsdFdpZHRoID0gMTUwO1xuICAgICAgICAgIHRoaXMuZGVmYXVsdEhlaWdodCA9IDMwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuZGVmYXVsdFdpZHRoID0gNTA7XG4gICAgICAgICAgdGhpcy5kZWZhdWx0SGVpZ2h0ID0gMzA7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aGlzLmRlZmF1bHRXaWR0aCA9IDQwO1xuICAgICAgICB0aGlzLmRlZmF1bHRIZWlnaHQgPSA0MDtcbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgdHlwZSxcbiAgICAgIG5hbWUsXG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIC4uLm90aGVyUHJvcHNcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBjb21wb25lbnQgPSBjb21wb25lbnRzW3R5cGVdICYmIGNvbXBvbmVudHNbdHlwZV1bbmFtZV07XG4gICAgY29uc3QgcHJvcGVydGllcyA9IHtcbiAgICAgIHdpZHRoOiB3aWR0aCB8fCB0aGlzLmRlZmF1bHRXaWR0aCxcbiAgICAgIGhlaWdodDogaGVpZ2h0IHx8IHRoaXMuZGVmYXVsdEhlaWdodCxcbiAgICAgIGZvY3VzYWJsZTogJ2ZhbHNlJyxcbiAgICAgIC4uLm90aGVyUHJvcHMsXG4gICAgfTtcbiAgICBpZiAodHlwZW9mIEluZGljYXRvckxvZ291dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIGNvbXBvbmVudChwcm9wZXJ0aWVzKTtcbiAgICB9XG4gICAgcmV0dXJuIDxzcGFuIGNsYXNzTmFtZT1cImljb25cIiB7Li4udGhpcy5wcm9wc30gLz47XG4gIH1cbn1cblxuSWNvbi5kZWZhdWx0UHJvcHMgPSB7XG4gIHdpZHRoOiBudWxsLFxuICBoZWlnaHQ6IG51bGwsXG59O1xuXG5JY29uLnByb3BUeXBlcyA9IHtcbiAgdHlwZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuICBoZWlnaHQ6IFByb3BUeXBlcy5udW1iZXIsXG59O1xuIl19